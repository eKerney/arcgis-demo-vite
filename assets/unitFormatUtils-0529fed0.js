import{bS as y,bT as u,bU as a,bV as m,bW as h,bX as l,bY as D,bZ as p,b_ as $,b$ as B,c0 as S,c1 as w}from"./index-71d9419a.js";function F(i,n,t){return i.units[n][t]}function c(i,n,t,e=2,s="abbr"){return`${a(n,{minimumFractionDigits:e,maximumFractionDigits:e,signDisplay:n>0?"never":"exceptZero"})} ${F(i,t,s)}`}function b(i,n,t,e=2,s="abbr"){return`${a(n,{minimumFractionDigits:e,maximumFractionDigits:e,signDisplay:"exceptZero"})} ${F(i,t,s)}`}function T(i,n,t,e=2,s="abbr"){const r=l(n,t);return c(i,u(n,t,r),r,e,s)}function v(i,n,t,e=2,s="abbr"){const r=l(n,t);return b(i,u(n,t,r),r,e,s)}function E(i,n,t,e=2,s="abbr"){const r=D(n,t);return c(i,u(n,t,r),r,e,s)}function I(i,n,t,e=2,s="abbr"){const r=D(n,t);return b(i,u(n,t,r),r,e,s)}function z(i,n,t,e=2,s="abbr"){const r=p(n,t);return c(i,u(n,t,r),r,e,s)}function K(i,n,t,e=2,s="abbr"){const r=p(n,t);return b(i,u(n,t,r),r,e,s)}function U(i,n,t,e=2,s="abbr"){const r=$(n,t);return c(i,u(n,t,r),r,e,s)}function Y(i,n,t,e=2,s="abbr"){const r=$(n,t);return b(i,u(n,t,r),r,e,s)}function J(i,n,t,e=2,s="abbr"){const r=B(n,t);return c(i,u(n,t,r),r,e,s)}function L(i,n,t,e=2,s="abbr"){const r=S(n,t);return c(i,u(n,t,r),r,e,s)}function N(i,n,t,e,s){s=s??2;let r=y.normalize(M(u(i,n,"degrees"),t,e),0,!0);const o={style:"unit",unitDisplay:"narrow",unit:"degree",maximumFractionDigits:s,minimumFractionDigits:s,signDisplay:r>0?"never":"exceptZero"};return r=x(r,o),a(r,o)}function j(i,n,t,e,s){t!==e&&(i=-i);const r={style:"unit",unitDisplay:"narrow",unit:"degree",maximumFractionDigits:s=s??2,minimumFractionDigits:s,signDisplay:"exceptZero"};let o=u(i,n,"degrees")%360;return o=x(o,r),a(o,r)}const f=new Map;function x(i,n){const t=JSON.stringify(n);let e=f.get(t);return e||(e=new Intl.NumberFormat("en-US",n),f.set(t,e)),/\-?\+?360/.test(e.format(i))?0:i}function M(i,n,t){if(n===t)return i;switch(t){case"arithmetic":return Z(i);case"geographic":return d(i)}}function Z(i){return 90-i}function d(i){return-i-90}const g=["B","kB","MB","GB","TB"];function k(i,n){let t=n===0?0:Math.floor(Math.log(n)/Math.log(m.KILOBYTES));t=w(t,0,g.length-1);const e=a(n/m.KILOBYTES**t,{maximumFractionDigits:2});return h(i.units.bytes[g[t]],{fileSize:e})}export{L as $,Y as B,v as D,I as F,J as M,N as S,c as b,U as d,b as g,K as h,T as p,k as v,j as w,E as x,z as y};
