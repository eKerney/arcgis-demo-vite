import{cb as v,ao as S,ag as u,fC as w,aL as b,ce as E,fG as k,aB as d,fH as C,fE as F,aS as G,fI as A,ak as R,fJ as y,aG as I,dE as P,f9 as O,bl as x,fK as $,ai as r,aj as p,al as H,fF as Z,fL as z}from"./index-71d9419a.js";import{a as L}from"./normalizeUtilsSync-150fcf38.js";import{m as M}from"./FeatureStore-5c3adbbf.js";import{e as W}from"./QueryEngine-428a6121.js";import{i as j,o as q}from"./queryEngineUtils-bb0e3dcb.js";import{i as g,r as T,n as m}from"./symbologySnappingCandidates-9db180a6.js";import"./normalizeUtilsCommon-2bf8a83b.js";import"./BoundsStore-8f75b446.js";import"./PooledRBush-274d5277.js";import"./quickselect-13b071df.js";import"./optimizedFeatureQueryEngineAdapter-8b6c7efa.js";import"./centroid-8e8cfa47.js";import"./normalizeUtils-12909a13.js";import"./WhereClause-19346df6.js";import"./executionError-c92d3b85.js";import"./json-48e3ea08.js";import"./utils-5e6bb655.js";import"./generateRendererUtils-45a5aa48.js";import"./VertexSnappingCandidate-d4c6c9e1.js";import"./PointSnappingHint-d8aee00f.js";const f="graphics-collections";let o=class extends v(S){get updating(){return this.updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d";if(!s||t.type==="map-notes")return g();const i=async(a,n)=>(await Z(e.whenLayerView(t),n)).elevationAlignPointsInFeatures(a,n);return g(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:i,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d",i=this._extrudedPolygonSymbolsCount>0;return s&&t.type!=="map-notes"&&i?m(i,async(a,n)=>{const l=await e.whenLayerView(t);return d(n),l.queryForSymbologySnapping({candidates:a,spatialReference:e.spatialReference},n)}):m()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources(e=>this._destroySource(e))}initialize(){this.updatingHandles.add(()=>this.getGraphicsLayers(),s=>{this.updatingHandles.removeHandles(f);for(const i of s)this._addMany(i.graphics.toArray()),this.handles.add([i.on("graphic-update",a=>this._onGraphicUpdate(a)),this.updatingHandles.addOnCollectionChange(()=>i.graphics,a=>this._onGraphicsChanged(a))],f)},u);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&this.addHandles([e.elevationProvider.on("elevation-change",({context:s})=>{w(s,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),b(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),u),E(()=>t,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(e,t){const{point:s}=e,i=await k(this._mapSources(l=>this._fetchCandidatesForSource(l,e,t)));d(t);const a=this._getGroundElevation,n=i.flat().map(l=>j(l,a));return C(s,n),n}get _getGroundElevation(){return q(this.view)}async _fetchCandidatesForSource(e,t,s){var h;const i=F(t,((h=this.view)==null?void 0:h.type)??"2d"),a=await e.queryEngine.executeQueryForSnapping(i,s);d(s);const n=await this._snappingElevationAligner.alignCandidates(a.candidates,s);d(s);const l=await this._symbologySnappingFetcher.fetch(n,s);d(s);const _=l.length===0?n:[...n,...l];return this._snappingElevationFilter.filter(i,_)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some(t=>t.graphics.includes(e.graphic)))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const i of e)i.geometry!=null&&(this._needsInitializeProjection(i.geometry.spatialReference)?(t.push(i.geometry.spatialReference),s.set(i.uid,i)):this._add(i));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const s=G(async n=>{await A(e.map(l=>({source:l,dest:this.spatialReference})),{signal:n}),this._markLoadedSpatialReferences(e);for(const[,l]of t)this._add(l)});this.updatingHandles.addPromise(s.promise);const i={task:s,graphics:t},a=()=>z(this._pendingAdds,i);s.promise.then(a,a),this._pendingAdds.push(i)}_markLoadedSpatialReferences(e){for(const t of e)t.wkid!=null&&this._loadedWkids.add(t.wkid),t.wkt!=null&&this._loadedWkts.add(t.wkt)}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=R.fromExtent(t));const s=this._ensureSource(t.type);if(s==null)return;const i=this._createOptimizedFeature(e.uid,t);i!=null&&(s.featureStore.add(i),y(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){return(e.wkid==null||!this._loadedWkids.has(e.wkid))&&(e.wkt==null||!this._loadedWkts.has(e.wkt))&&!I(e,this.spatialReference)}_createOptimizedFeature(e,t){const s=P(L(t),this.spatialReference);if(!s)return null;const i=this._ensureGeometryHasZ(s),a=O(i,this._hasZ,!1);return new x(a,{[c]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=i=>{for(;i.length<3;)i.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=s.z??0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach(i=>i.forEach(t));break;case"polygon":s.rings.forEach(i=>i.forEach(t))}return s}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=$.toJSON(e),s=this._hasZ,i=new M({geometryType:t,hasZ:s,hasM:!1});return{featureStore:i,queryEngine:new W({featureStore:i,fields:[{name:c,type:"esriFieldTypeOID",alias:c}],geometryType:t,hasM:!1,hasZ:s,objectIdField:c,spatialReference:this.spatialReference,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),y(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:i,multipoint:a}=this._sources,n=[];return t!=null&&n.push(e(t)),s!=null&&n.push(e(s)),i!=null&&n.push(e(i)),a!=null&&n.push(e(a)),n}};r([p()],o.prototype,"getGraphicsLayers",void 0),r([p({constructOnly:!0})],o.prototype,"layerSource",void 0),r([p({constructOnly:!0})],o.prototype,"spatialReference",void 0),r([p({constructOnly:!0})],o.prototype,"view",void 0),r([p({readOnly:!0})],o.prototype,"updating",null),r([p({readOnly:!0})],o.prototype,"availability",void 0),r([p()],o.prototype,"_hasZ",null),r([p()],o.prototype,"_snappingElevationAligner",null),r([p()],o.prototype,"_snappingElevationFilter",null),r([p()],o.prototype,"_symbologySnappingFetcher",null),r([p()],o.prototype,"_extrudedPolygonSymbolsCount",void 0),r([p()],o.prototype,"_getGroundElevation",null),o=r([H("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],o);const c="OBJECTID";export{o as GraphicsSnappingSource};
