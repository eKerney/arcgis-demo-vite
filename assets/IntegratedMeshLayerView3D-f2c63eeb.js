import{aO as n,ag as p,aP as m,ai as i,aj as e,aQ as l,al as d}from"./index-71d9419a.js";import{x as h}from"./I3SMeshView3D-851479c2.js";import{n as c}from"./LayerView3D-55fffc04.js";import{d as u}from"./LayerView-d3a3bea6.js";import"./I3SOverrides-0797cff6.js";import"./I3SNode-dc92f8f0.js";import"./meshFeatureSet-31b22a08.js";import"./MeshGeoreferencedRelativeVertexSpace-f62a2618.js";import"./MeshLocalVertexSpace-69085e30.js";import"./MeshTransform-1ca39bdb.js";import"./georeference-84168d54.js";import"./External-e4f56250.js";import"./FeatureLayerView3D-c7b506b9.js";import"./FeatureLayerViewBase3D-26531bea.js";import"./FeatureLikeLayerView3D-ec9c7c0f.js";import"./dehydratedFeatureComparison-50a0d901.js";import"./queryForSymbologySnapping-e9d4ec56.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-d2abab5f.js";import"./rendererConversion-260a8404.js";import"./optimizedFeatureQueryEngineAdapter-8b6c7efa.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-274d5277.js";import"./quickselect-13b071df.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-428a6121.js";import"./normalizeUtils-12909a13.js";import"./normalizeUtilsCommon-2bf8a83b.js";import"./WhereClause-19346df6.js";import"./executionError-c92d3b85.js";import"./json-48e3ea08.js";import"./utils-5e6bb655.js";import"./generateRendererUtils-45a5aa48.js";import"./FeatureStore-5c3adbbf.js";import"./BoundsStore-8f75b446.js";import"./projectExtentUtils-07d43fc4.js";import"./query-cc9f5d54.js";import"./pbfQueryUtils-43ab8bb6.js";import"./pbf-d00ed0d0.js";import"./EventedSet-3ae62a3e.js";import"./RefreshableLayerView-1f6bbdf7.js";import"./SceneModification-c5665ebc.js";import"./SceneLayerWorker-0df254e9.js";const g=.2;let r=class extends h(c(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const at=r;export{at as default};
