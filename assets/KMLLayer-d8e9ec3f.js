import{bv as S,gF as I,lc as z,dP as J,ax as W,cL as M,ld as x,le as w,lf as k,lg as A,bD as L,cd as D,fR as U,ce as j,aM as m,aL as P,c7 as _,bP as O,lh as V,aK as G,ai as i,aj as a,li as q,aC as $,al as C,h3 as H,fS as B,fT as Q,fU as X,aq as Y,ar as Z,as as ee,du as te,ef as se,aw as re,cl as ie,aE as le,aF as oe}from"./index-a4349970.js";const ae={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function R(e){const t=e.folders||[],r=t.slice(),s=new Map,l=new Map,d=new Map,b=new Map,v=new Map,f={esriGeometryPoint:l,esriGeometryPolyline:d,esriGeometryPolygon:b};(e.featureCollection&&e.featureCollection.layers||[]).forEach(o=>{const p=S(o);p.featureSet.features=[];const y=o.featureSet.geometryType;s.set(y,p);const c=o.layerDefinition.objectIdField;y==="esriGeometryPoint"?E(l,c,o.featureSet.features):y==="esriGeometryPolyline"?E(d,c,o.featureSet.features):y==="esriGeometryPolygon"&&E(b,c,o.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(o=>{v.set(o.id,o)}),t.forEach(o=>{o.networkLinkIds.forEach(p=>{const y=ue(p,o.id,e.networkLinks);y&&r.push(y)})}),r.forEach(o=>{var p;if(o.featureInfos){o.points=S(s.get("esriGeometryPoint")),o.polylines=S(s.get("esriGeometryPolyline")),o.polygons=S(s.get("esriGeometryPolygon")),o.mapImages=[];for(const y of o.featureInfos)switch(y.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const c=f[y.type].get(y.id);c&&((p=o[ae[y.type]])==null||p.featureSet.features.push(c));break}case"GroundOverlay":{const c=v.get(y.id);c&&o.mapImages.push(c);break}}o.fullExtent=F([o])}});const h=F(r);return{folders:t,sublayers:r,extent:h}}function T(e,t,r,s){const l=I&&I.findCredential(e);e=z(e,{token:l&&l.token});const d=J.kmlServiceUrl;return W(d,{query:{url:e,model:"simple",folders:"",refresh:r!==0||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:s})}function K(e,t,r=null,s=[]){const l=[],d={},b=t.sublayers,v=t.folders.map(f=>f.id);return b.forEach(f=>{var o;const h=new e;if(r?h.read(f,r):h.read(f),s.length&&v.includes(h.id)&&(h.visible=s.includes(h.id)),d[f.id]=h,f.parentFolderId!=null&&f.parentFolderId!==-1){const p=d[f.parentFolderId];p.sublayers||(p.sublayers=[]),(o=p.sublayers)==null||o.unshift(h)}else l.unshift(h)}),l}function E(e,t,r){r.forEach(s=>{e.set(s.attributes[t],s)})}function ne(e,t){let r;return t.some(s=>s.id===e&&(r=s,!0)),r}function ue(e,t,r){const s=ne(e,r);return s&&(s.parentFolderId=t,s.networkLink=s),s}function F(e){const t=M(x),r=M(x);for(const s of e){if(s.polygons&&s.polygons.featureSet&&s.polygons.featureSet.features)for(const l of s.polygons.featureSet.features)w(t,l.geometry),k(r,t);if(s.polylines&&s.polylines.featureSet&&s.polylines.featureSet.features)for(const l of s.polylines.featureSet.features)w(t,l.geometry),k(r,t);if(s.points&&s.points.featureSet&&s.points.featureSet.features)for(const l of s.points.featureSet.features)w(t,l.geometry),k(r,t);if(s.mapImages)for(const l of s.mapImages)w(t,l.extent),k(r,t)}return A(r,x)?void 0:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:L.WGS84}}var g;let u=g=class extends D.EventedMixin(U(H)){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([j(()=>this.sublayers,"after-add",({item:t})=>{t.parent=this,t.layer=this.layer},m),j(()=>this.sublayers,"after-remove",({item:t})=>{t.layer=t.parent=null},m),P(()=>this.sublayers,(t,r)=>{if(r)for(const s of r)s.layer=s.parent=null;if(t)for(const s of t)s.parent=this,s.layer=this.layer},m),P(()=>this.layer,t=>{if(this.sublayers)for(const r of this.sublayers)r.layer=t},m)])}initialize(){_(()=>this.networkLink).then(()=>_(()=>this.visible===!0)).then(()=>this.load())}load(e){var s;if(!this.networkLink||this.networkLink.viewFormat)return;const t=e!=null?e.signal:null,r=this._fetchService(((s=this._get("networkLink"))==null?void 0:s.href)??"",t).then(l=>{var v;const d=F(l.sublayers);this.fullExtent=O.fromJSON(d),this.sourceJSON=l;const b=V(G.ofType(g),K(g,l));this.sublayers?this.sublayers.addMany(b):this.sublayers=b,(v=this.layer)==null||v.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(r),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return T(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(r=>R(r.data))}};i([a()],u.prototype,"description",void 0),i([a({type:O})],u.prototype,"fullExtent",void 0),i([a()],u.prototype,"id",void 0),i([a({readOnly:!0,value:null})],u.prototype,"networkLink",void 0),i([a({json:{write:{allowNull:!0}}})],u.prototype,"parent",void 0),i([a({type:G.ofType(g),json:{write:{allowNull:!0}}})],u.prototype,"sublayers",void 0),i([a({value:null,json:{read:{source:"name",reader:e=>q(e)}}})],u.prototype,"title",void 0),i([a({value:!0})],u.prototype,"visible",null),i([$("visible",["visibility"])],u.prototype,"readVisible",null),i([a()],u.prototype,"sourceJSON",void 0),i([a()],u.prototype,"layer",void 0),u=g=i([C("esri.layers.support.KMLSublayer")],u);const N=u,ye=["kml","xml"];let n=class extends B(Q(X(Y(Z(ee(oe)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new te({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.outSpatialReference=L.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([P(()=>this.sublayers,(e,t)=>{t&&t.forEach(r=>{r.parent=null,r.layer=null}),e&&e.forEach(r=>{r.parent=this,r.layer=this})},m),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,r){return K(N,t,r,this._visibleFolders)}writeSublayers(e,t){const r=[],s=e.toArray();for(;s.length;){const l=s[0];l.networkLink||(l.visible&&r.push(l.id),l.sublayers&&s.push(...l.sublayers.toArray())),s.shift()}t.visibleFolders=r}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?se(this.url,ye)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],r=s=>{s.visible&&(t.push(s),s.sublayers&&s.sublayers.forEach(r))};return e&&e.forEach(r),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(re).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const t=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:T(this.url??"",this.outSpatialReference,this.refreshInterval,e)),r=R(t.data);r&&this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent!=null&&(e=this.extent.clone());const t=r=>{if(r.sublayers)for(const s of r.sublayers.items)t(s),s.visible&&s.fullExtent&&(e!=null?e.union(s.fullExtent):e=s.fullExtent.clone())};return t(this),e}};i([a({readOnly:!0})],n.prototype,"allSublayers",void 0),i([a({type:L})],n.prototype,"outSpatialReference",void 0),i([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),i([a({readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"legendEnabled",void 0),i([a({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),i([a({type:["KML"]})],n.prototype,"operationalLayerType",void 0),i([a({})],n.prototype,"resourceInfo",void 0),i([a({type:G.ofType(N),json:{write:{ignoreOrigin:!0}}})],n.prototype,"sublayers",void 0),i([$(["web-map","portal-item"],"sublayers",["visibleFolders"])],n.prototype,"readSublayersFromItemOrWebMap",null),i([$("service","sublayers",["sublayers"])],n.prototype,"readSublayers",null),i([ie("sublayers")],n.prototype,"writeSublayers",null),i([a({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),i([a({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],n.prototype,"title",null),i([a(le)],n.prototype,"url",void 0),i([a({readOnly:!0})],n.prototype,"visibleSublayers",null),i([a({type:O})],n.prototype,"extent",void 0),i([a()],n.prototype,"fullExtent",null),n=i([C("esri.layers.KMLLayer")],n);const fe=n;export{fe as default};
