import{aO as n,ag as p,aP as m,ai as i,aj as e,aQ as l,al as d}from"./index-a4349970.js";import{x as h}from"./I3SMeshView3D-f4aa878e.js";import{n as c}from"./LayerView3D-c902ad68.js";import{d as u}from"./LayerView-445fa7dc.js";import"./I3SOverrides-0f5cac85.js";import"./I3SNode-10a6d074.js";import"./meshFeatureSet-399218fa.js";import"./MeshGeoreferencedRelativeVertexSpace-9875928e.js";import"./MeshLocalVertexSpace-7cdf5405.js";import"./MeshTransform-010ec88d.js";import"./georeference-290cc98c.js";import"./External-bb7911cb.js";import"./FeatureLayerView3D-3822cdec.js";import"./FeatureLayerViewBase3D-9d9ecb32.js";import"./FeatureLikeLayerView3D-16dfe768.js";import"./dehydratedFeatureComparison-8b0f7a5e.js";import"./queryForSymbologySnapping-b3499be0.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-1682766e.js";import"./rendererConversion-63f19ac6.js";import"./optimizedFeatureQueryEngineAdapter-b94e0c6e.js";import"./centroid-8e8cfa47.js";import"./PooledRBush-8c294f97.js";import"./quickselect-4ab1951a.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-2a384d23.js";import"./normalizeUtils-59a0d96f.js";import"./normalizeUtilsCommon-7f264124.js";import"./WhereClause-2ddaeac4.js";import"./executionError-c92d3b85.js";import"./json-48e3ea08.js";import"./utils-64b5f32a.js";import"./generateRendererUtils-0c174d20.js";import"./FeatureStore-d3e1521f.js";import"./BoundsStore-d825eb87.js";import"./projectExtentUtils-f947d66d.js";import"./query-c61fb772.js";import"./pbfQueryUtils-8bfa183d.js";import"./pbf-045c2a87.js";import"./EventedSet-105ce0aa.js";import"./RefreshableLayerView-866ff961.js";import"./SceneModification-affcb2cc.js";import"./SceneLayerWorker-97cd139b.js";const g=.2;let r=class extends h(c(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=n.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,o,a,s;return((s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?g:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new m;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(l)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([d("esri.views.3d.layers.SceneLayerView3D")],r);const at=r;export{at as default};
