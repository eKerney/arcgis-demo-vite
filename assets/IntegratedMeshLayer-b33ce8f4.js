import{fR as g,aK as S,a$ as w,ax as T,ai as i,aj as r,al as m,iV as _,ap as O,aq as $,ar as x,fU as L,as as I,g6 as M,af as N,ce as b,aM as j,iW as A,aw as V,iX as h,av as d,h8 as K,h9 as U,ha as D,hb as J,ck as P,aC as R,iY as E,aF as z}from"./index-4e7cdbf0.js";import{f as y}from"./SceneModification-ae130d17.js";var a;let n=a=class extends g(S.ofType(y)){constructor(e){super(e),this.url=null}clone(){return new a({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(s=>s.toJSON(e)).filter(s=>!!s.geometry)}static fromJSON(e,s){const o=new a;for(const p of e)o.add(y.fromJSON(p,s));return o}static async fromUrl(e,s,o){const p={url:w(e),origin:"service"},f=await T(e,{responseType:"json",signal:o==null?void 0:o.signal}),v=s.toJSON(),l=[];for(const c of f.data)l.push(y.fromJSON({...c,geometry:{...c.geometry,spatialReference:v}},p));return new a({url:e,items:l})}};i([r({type:String})],n.prototype,"url",void 0),n=a=i([m("esri.layers.support.SceneModifications")],n);const u=n;let t=class extends _(O($(x(L(I(M(z))))))){constructor(...e){super(...e),this._handles=new N,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(b(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,j))}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}readModifications(e,s,o){this._modificationsSource={url:A(e,o),context:o}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const s=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(o){V(o)}if(await this._fetchService(s),this._modificationsSource!=null){const o=await u.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,s)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,s){return this._debouncedSaveOperations(h.SAVE_AS,{...s,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(h.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};i([r({type:String,readOnly:!0})],t.prototype,"geometryType",void 0),i([r({type:["show","hide"]})],t.prototype,"listMode",void 0),i([r({type:["IntegratedMeshLayer"]})],t.prototype,"operationalLayerType",void 0),i([r({json:{read:!1},readOnly:!0})],t.prototype,"type",void 0),i([r({type:K,readOnly:!0})],t.prototype,"nodePages",void 0),i([r({type:[U],readOnly:!0})],t.prototype,"materialDefinitions",void 0),i([r({type:[D],readOnly:!0})],t.prototype,"textureSetDefinitions",void 0),i([r({type:[J],readOnly:!0})],t.prototype,"geometryDefinitions",void 0),i([r({readOnly:!0})],t.prototype,"serviceUpdateTimeStamp",void 0),i([r({type:u}),P({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),i([R(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),i([r(E)],t.prototype,"elevationInfo",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),t=i([m("esri.layers.IntegratedMeshLayer")],t);const k=t;export{k as default};
